"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var base_1 = require("../base");
exports.Installation = base_1.page("\n# Installation\n\n## CDN\n\nThe easiest way to get Mendelev.CSS in your project is to use a CDN. Notice that\nthe CDN build is a one-size-fits-all solution that has taken a lots of decisions\nabout colors, typography, etc that you probably will want to change in your\nproject. The CDN version, however, is a great way to get your hands dirt and\nstart building something.\n\nWe use jsdelivr:\n\n```html\n<!-- Add the fonts -->\n<link \n    href=\"//fonts.googleapis.com/css?family=Roboto:300,300italic,700,700italic\"\n    rel=\"stylesheet\">\n\n<!-- Normalize.CSS -->\n<link \n    href=\"//cdn.rawgit.com/necolas/normalize.css/master/normalize.css\"\n    rel=\"stylesheet\">\n\n<!-- Default stylesheet -->\n<link \n    href=\"https://cdn.jsdelivr.net/npm/mendeleev.css/dist/mendeleev.min.css\" \n    rel=\"stylesheet\">\n\n<!-- Extra components -->\n<link\n    href=\"https://cdn.jsdelivr.net/npm/mendeleev.css/dist/mendeleev-components.min.css\" \n    rel=\"stylesheet\">\n```\n\n## NPM + Sass + Configuration\n\nMendeleev.CSS is build with Sass and can be personalized to your projects using\na series of configurations. You can install it using Sass \n\n### Parcel\n\n\n### Webpack\n\n");
