////////////////////////////////////////////////////////////////////////////////
/// COLOR MIXINS AND UTILITIES
/// @group Color
/// @author Fábio Macêdo Mendes
////////////////////////////////////////////////////////////////////////////////
@import '../functions/color';

$_mendeleev-color-not-given: unique-id() !default;

// Implements the color mixin.
@function include-color($color, $border: false, $flip: false) {
    $bg: color(nth($color, 1));
    $fg: $_mendeleev-color-not-given;
    @if type-of($color) == list {
        $fg: nth($color, 2);
    }
    @if $fg == $_mendeleev-color-not-given {
        $fg: color($bg, contrast);
    } @else {
        $fg: color($fg);
    }
    @if $flip {
        $aux: $bg;
        $bg: $fg;
        $fg: $aux;
    }
    $result: (color: $fg, background-color: $bg);

    // Add border color
    @if $border == foreground or $border == fg {
        $result: map-merge($result, (border-color: $fg));
    } @else if $border == background or $border == bg or $border {
        $result: map-merge($result, (border-color: $bg));
    }

    // Set properties
    @return $result;
}

/// Define the color and background-color properties.
/// If called with a single argument, treats the color as a color name and
/// assign it to the background and the contrast color to the foreground.
@mixin color($color, $border: false, $flip: false) {
    @include from-map(include-color($color, $border, $flip));
}

