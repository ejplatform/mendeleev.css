//------------------------------------------------------------------------------
// CSS GRID
//------------------------------------------------------------------------------

@if $mendeleev-registering-utilities {

    // -------------------------------------------------------------------------
    // REGULAR CSS GRID
    // -------------------------------------------------------------------------

    $do: mendeleev-module(
            'grid', (
            // Basic definitions
            '.grid-dense': (
                grid-auto-flow: dense
            ),
            // Templates
            '.grid-': scale-of(
                $scale: $mendeleev-grid-scale,
                $css: (
                    '--gridGap': 0,
                    '--gridSize': null,
                    display: grid,
                ),
                $interpolate: (
                    grid-template-columns: 'repeat($1, 1fr)',
                )
            ),
            // Row templates
            '.rows-': scale-of(
                $scale: $mendeleev-grid-scale,
                $css: (
                    '--gridGap': 0,
                    '--gridSize': null,
                    display: grid,
                ),
                $interpolate: (
                    grid-template-rows: 'repeat($1, 1fr)',
                )
            ),
            //
            // Gap between cells
            '.gap-': scale-of(
                $scale: $mendeleev-grid-gap-scale,
                $css: (
                    '--gridGap': null,
                    'grid-gap': null,
                    'gap': null,
                )
            )
        ));

    $do: mendeleev-utility-module(
            'grid', (
            display:
                ('.', (
                    grid: grid,
                )),
            grid-auto-flow:
                ('.grid-', (
                    dense: dense,
                )),
            //
            // Global cell placement
            place-items:
                ('.place-', (
                    center: center,
                    stretch: stretch,
                )),
            justify-items:
                ('.place-', (
                    right: right,
                    left: left,
                    start: start,
                    end: end,
                    center-x: center,
                    stretch-x: stretch,
                )),
            align-items:
                ('.place-', (
                    top: start,
                    bottom: end,
                    center-y: center,
                    center: center,
                    stretch-y: stretch,
                    stretch: stretch
                )),
            //
            // Grid alignment on its container
            place-content:
                ('.grid-', (
                    center: center,
                    stretch: stretch,
                    around: space-around,
                    between: space-between,
                    evenly: space-evenly,
                )),
            justify-content:
                ('.grid-', (
                    right: right,
                    left: left,
                    start: start,
                    end: end,
                    center-x: center,
                    stretch-x: stretch,
                    around-x: space-around,
                    between-x: space-between,
                    evenly-x: space-evenly,
                )),
            align-content:
                ('.grid-', (
                    top: start,
                    bottom: end,
                    center-y: center,
                    stretch-y: stretch,
                    around-y: space-around,
                    between-y: space-between,
                    evenly-y: space-evenly,
                )),
            //
            // Individual cell alignment
            place-self:
                ('.cell-', (
                    center: center,
                    stretch: stretch,
                )),
            justify-self:
                ('.cell-', (
                    right: right,
                    left: left,
                    start: start,
                    end: end,
                    center-x: center,
                    stretch-x: stretch,
                )),
            align-self:
                ('.cell-', (
                    top: start,
                    bottom: end,
                    center-y: center,
                    stretch-y: stretch,
                )),
            //
            // Individual cell positioning and span
            grid-column-start:
                ('.at-col-', $mendeleev-grid-scale),
            grid-row-start:
                ('.at-row-', $mendeleev-grid-scale),
            grid-column:
                ('.col-span', $mendeleev-grid-span-data),
            grid-row:
                ('.row-span', $mendeleev-grid-span-data),
        ));

    //------------------------------------------------------------------------------
    // HARD GRID
    //------------------------------------------------------------------------------

    //@function _mendeleev-hard-grid($n) {
    //    @return L($n, 100% / $n, ($n - 1) / $n);
    //}
    //
    //$mendeleev-hard-grid-scale: map-apply-values(_mendeleev-hard-grid, $mendeleev-grid-scale) !default;
    //
    //$do: mendeleev-module(
    //        'hard-grid', (
    //        // Basic definitions
    //        '.hard-grid': (
    //            display: grid,
    //        ),
    //        // Templates
    //        '.hard-grid-': scale-of(
    //            $scale: $mendeleev-grid-scale,
    //            $css: (
    //                '--grid-gap': 0,
    //                '--grid-size': null,
    //                display: grid,
    //                grid-template-columns: 'repeat($1, calc($2 - $3 * var(--grid-gap)))',
    //            )
    //        ),
    //        // Row templates
    //        '.hard-rows-': scale-of(
    //            $scale: $mendeleev-grid-scale,
    //            $css: (
    //                '--grid-gap': 0,
    //                '--grid-size': null,
    //                display: grid,
    //                grid-template-rows: 'repeat($1, calc($2 - $3 * var(--grid-gap)))',
    //            )
    //        ),
    //    ));
}
