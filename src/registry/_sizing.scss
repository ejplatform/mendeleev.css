//------------------------------------------------------------------------------
// DEFINE THE DEFAULT SIZING SCALE
//------------------------------------------------------------------------------

@if $mendeleev-registering-utilities {
    //--------------------------------------------------------------------------
    // PADDING SCALE

    $do: mendeleev-utility-module(
            'padding', (
            padding:
                ('.pad-', $mendeleev-size-scale-rem)
        ));

    $do: mendeleev-module(
            'padding', (
            '.pad-x': scale-of(
                $scale: $mendeleev-size-scale-rem,
                $css: (
                    padding-left: null,
                    padding-right: null,
                )
            ),
            '.pad-y': scale-of(
                $scale: $mendeleev-size-scale-rem,
                $css: (
                    padding-top: null,
                    padding-bottom: null,
                )
            ),
        ));

    $do: mendeleev-utility-module(
            'padding', (
            padding-left:
                ('.pad-l', $mendeleev-size-scale-rem),
            padding-right:
                ('.pad-r', $mendeleev-size-scale-rem),
            padding-top:
                ('.pad-t', $mendeleev-size-scale-rem),
            padding-bottom:
                ('.pad-b', $mendeleev-size-scale-rem),
        ));

    //--------------------------------------------------------------------------
    // MARGIN SCALE

    $mendeleev-sizes-auto: map-merge((auto: auto), $mendeleev-size-scale-rem);

    $do: mendeleev-utility-module(
            'margin', (
            margin:
                ('.margin-', map-merge(
                        $mendeleev-sizes-auto,
                        map-prefix-keys(map-apply-values(negate, $mendeleev-size-scale-rem), n)
                ))
        ));

    $do: mendeleev-module(
            'margin', (
            '.margin-': scale-of(
                $scale: map-merge(
                        map-prefix-keys($mendeleev-sizes-auto, x),
                        map-prefix-keys(map-apply-values(negate, $mendeleev-size-scale-rem), nx)
                ),
                $css: (
                    margin-left: null,
                    margin-right: null,
                )
            ),
        ));

    $do: mendeleev-module(
            'margin', (
            '.margin-': scale-of(
                $scale: map-merge(
                        map-prefix-keys($mendeleev-sizes-auto, y),
                        map-prefix-keys(map-apply-values(negate, $mendeleev-size-scale-rem), ny)
                ),
                $css: (
                    margin-top: null,
                    margin-bottom: null,
                )
            ),
        ));

    $do: mendeleev-utility-module(
            'margin', (
            margin-left:
                ('.margin-', map-merge(
                        map-prefix-keys($mendeleev-sizes-auto, l),
                        map-prefix-keys(map-apply-values(negate, $mendeleev-size-scale-rem), nl)
                )),
            margin-right:
                ('.margin-', map-merge(
                        map-prefix-keys($mendeleev-sizes-auto, r),
                        map-prefix-keys(map-apply-values(negate, $mendeleev-size-scale-rem), nr)
                )),
            margin-top:
                ('.margin-', map-merge(
                        map-prefix-keys($mendeleev-sizes-auto, t),
                        map-prefix-keys(map-apply-values(negate, $mendeleev-size-scale-rem), nt)
                )),
            margin-bottom:
                ('.margin-', map-merge(
                        map-prefix-keys($mendeleev-sizes-auto, b),
                        map-prefix-keys(map-apply-values(negate, $mendeleev-size-scale-rem), nb)
                )),
        ));

    //--------------------------------------------------------------------------
    // SIZES

    $mendeleev-sizes: map-merge($mendeleev-size-scale-rem, (
        auto: auto,
        available: available,
        fit: fit-content,
        max: max-content,
        min: min-content,
    ));

    $do: mendeleev-module(
            'sizes', (
            '.size-': scale-of(
                $scale: $mendeleev-sizes,
                $css: (
                    width: null,
                    height: null,
                )
            ),
        ));

    // Horizontal and vertical
    $do: mendeleev-utility-module(
            'sizes', (
            width:
                ('.size-x', $mendeleev-sizes),
            height:
                ('.size-y', $mendeleev-sizes),
            line-height:
                ('.line-height-', map-merge(
                        $mendeleev-size-scale-rem,
                        (normal: normal)
                )),
        ));

    $do: mendeleev-utility-module(
            'sizing', (
            width:
                ('.width-', $mendeleev-grid-size-scale),
            max-width:
                ('.max-width-', $mendeleev-grid-size-scale),
            min-width:
                ('.min-width-', $mendeleev-grid-size-scale),
            height:
                ('.height-', $mendeleev-grid-size-scale),
            max-height:
                ('.max-height-', $mendeleev-grid-size-scale),
            min-height:
                ('.min-height-', $mendeleev-grid-size-scale),
        ));
}
