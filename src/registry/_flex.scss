//------------------------------------------------------------------------------
// FLEX BOXES
//------------------------------------------------------------------------------
@import '../preflight';

@function _mendeleev-flex-grid-gutter($name, $idx) {
    $size: size-scale($idx);
    @return (
        '#{$name}': (
            margin: unquote('#{$size} -#{$size}'),
        ),
        '#{$name} > *': (
            margin: $size,
        ),
        '#{$name} + #{$name}': (
            margin-top: unquote('-#{$size})'),
        ),
    )
}

$do: mendeleev-module(
        'flex-grid', (
        //Row definitions and modifiers
        '.row': (
            align-items: stretch,
            display: flex,
            flex-flow: row,
            justify-content: space-between,
        ),
        '.row > *': (
            min-width: 0,
        ),
        '.row-inline': (
            align-items: stretch,
            display: inline-flex,
            flex-flow: row,
            justify-content: space-between,
        ),
        '.row-expand > *': (
            flex: 1,
        ),
        // Col definitions and modifiers
        '.col': (
            align-items: stretch,
            display: flex,
            flex-flow: column,
            justify-content: space-between,
        ),
        '.col > *': (
            min-width: 0,
        ),
        '.col-inline': (
            align-items: stretch,
            display: inline-flex,
            flex-flow: column,
            justify-content: space-between,
        ),
        '.col-expand > *': (
            flex: 1,
        ),
        // Gutter scale
        '.gutter-$1': fn-scale(_mendeleev-flex-grid-gutter, L(1, 2, 3, 4)),
    ));

//------------------------------------------------------------------------------
// FLEXBOX RELATED UTILITY CLASSES
//------------------------------------------------------------------------------

$do: mendeleev-utility-module(
        'flex', (
        // Direction
        flex-direction:
            ('.flex-', (
                row,
                row-reverse,
                column,
                column-reverse,
            )),
        // Alignment along the flex axis
        justify-content:
            ('flex-', (
                start: flex-start,
                center: center,
                end: flex-end,
                between: space-between,
                around: space-around,
                evenly: space-evenly,
            )),
        // Alignment perpendicularly to the flex axis
        align-items:
            ('.items-', (
                stretch: stretch,
                start: flex-start,
                center: center,
                end: flex-end,
                baseline: baseline,
            )),
        // Alignment of flex content lines in the available area
        align-content:
            ('.content-', (
                start: flex-start,
                center: center,
                end: flex-end,
                between: space-between,
                around: space-around,
                evenly: space-evenly,
            )),
        // Wrapping
        flex-wrap:
            ('.', (
                wrap,
                nowrap,
                wrap-reverse,
            )),
        // Align a single element
        align-self:
            ('.self-', (
                stretch: stretch,
                start: flex-start,
                center: center,
                end: flex-end,
                baseline: baseline,
            )),
        // Flex grow and shrink
        flex-shrink:
            ('.flex-', (
                shrink: 1,
                noshrink: 0,
            )),
        flex-grow:
            ('.flex-', (
                grow: 1,
                nogrow: 0,
            )),
        // Flex grow scale
        flex:
            ('.flex-$1', fn-scale(
                    utility-scale,
                    L(initial, auto, join, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
            )),
        //Flex order scale
        order:
            ('.order-$1', fn-scale(
                    utility-scale,
                    L(auto, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
            )),
    ));

