// Functions in this package will eventually make their way to fn.sass.
@import '../node_modules/fn.sass/src/fn';

/// Log given $values and return the last argument.
@function log($args...) {
    @warn 'LOG: #{$args}';
    @return nth($args, length($args));
}


/// Return a new list with the first element removed
/// @arg $lst
@function tail($lst) {
    $n: length($lst);
    @if $n <= 1 {
        @return ();
    }
    @return slice($lst, 2, $n);
}

/// Apply function to every element of array.
///
/// @arg $fn - A binary operator function
/// @arg $arr - Array
@function array-map($fn, $arr, $args...) {
    $fn: as-func($fn);
    $ys: ();
    @each $x in $arr {
        $ys: join($ys, call($fn, $x, $args...));
    }
    @return $ys;
}


@mixin var-fallback($defs) {
    @each $prop, $pair in $defs {
        $value: nth($pair, 1);
        $var-name: nth($pair, 2);
        #{$prop}: #{$value};
        #{$prop}: unquote('var(--#{$var-name})');
    }
}
