// Alias to fn.sass
@import 'fn.sass/fn';

/// Log given $values and return the last argument.
@function log($args...) {
    @warn 'LOG: #{$args}';
    @return nth($args, length($args));
}

@mixin var-fallback($defs) {
    @each $prop, $pair in $defs {
        $value: nth($pair, 1);
        $var-name: nth($pair, 2);
        #{$prop}: #{$value};
        #{$prop}: unquote('var(--#{$var-name})');
    }
}

@function map-some-keys($pred, $map, $args...) {
    $fn: as-func($pred);

    @each $k, $v in $map {
        @if call($fn, $k, $args...) {
            @return true;
        }
    }
    @return false;
}

@function map-some-values($pred, $map, $args...) {
    $fn: as-func($pred);

    @each $k, $v in $map {
        @if call($fn, $v, $args...) {
            @return true;
        }
    }
    @return false;
}

@function map-every-key($pred, $map, $args...) {
    $fn: as-func($pred);

    @each $k, $v in $map {
        @if not call($fn, $k, $args...) {
            @return false;
        }
    }
    @return true;
}

@function map-every-value($pred, $map, $args...) {
    $fn: as-func($pred);

    @each $k, $v in $map {
        @if not call($fn, $v, $args...) {
            @return false;
        }
    }
    @return true;
}
