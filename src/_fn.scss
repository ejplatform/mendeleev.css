// Functions in this package will eventually make their way to fn.sass.
@import '../node_modules/fn.sass/src/fn';

/// Log given $values and return the last argument.
@function log($args...) {
    @warn 'LOG: #{$args}';
    @return nth($args, length($args));
}

/// Create a list of fn($x) for each $x in $xs.
/// Differently from lst-map, this function applies $x **after** the extra
/// arguments.
///
/// Any additional arguments are passed to the function during function
/// application.
///
/// @arg $fn - Function name or handle
/// @arg $xs - List
@function lst-rmap($fn, $xs, $args...) {
    @if length($args) == 0 {
        @return lst-map($fn, $xs);
    }
    $xs: to-lst($xs);
    $ys: null;
    $fn: as-func($fn);
    @while $xs != null {
        $x: nth($xs, 1);
        $xs: nth($xs, 2);
        $args-all: append($args, $x);
        $ys: (call($fn, $args-all...) $ys);
    }
    @return lst-reverse($ys);
}

@mixin var-fallback($defs) {
    @each $prop, $pair in $defs {
        $value: nth($pair, 1);
        $var-name: nth($pair, 2);
        #{$prop}: #{$value};
        #{$prop}: unquote('var(--#{$var-name})');
    }
}


